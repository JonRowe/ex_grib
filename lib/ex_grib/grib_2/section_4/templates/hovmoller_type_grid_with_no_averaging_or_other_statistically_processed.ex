defmodule ExGrib.Grib2.Section4.Templates.HovmollerTypeGridWithNoAveragingOrOtherStatisticallyProcessed do
  @moduledoc """
  Template 4.1100

  Hovmoller type grid with no averaging or other statistically processed

  Note:Â  Hours greater than
  65534 will be coded as 65534

  WARNING THIS TEMPLATE WAS AUTOGENERATED AND IS LIKELY INCOMPLETE

  https://www.nco.ncep.noaa.gov/pmb/docs/grib2/grib2_doc/grib2_temp4-1100.shtml
  """

  defstruct parameter_category: nil,
            parameter_number: nil,
            type_of_generating_process: nil,
            background_generating_process_identifier: nil,
            analysis_or_forecast_generating_process_identifier: nil,
            hours_of_observational_data_cutoff_after_reference_time: nil,
            minutes_of_observational_data_cutoff_after_reference_time: nil,
            indicator_of_unit_of_time_range: nil,
            forecast_time_in_units_defined_by_octet: nil,
            type_of_list_fixed_surface: nil,
            scale_factor_of_first_fixed_surface: nil,
            scaled_value_of_first_fixed_surface: nil,
            type_of_second_fixed_surface: nil,
            scale_factor_of_second_fixed_surface: nil,
            scaled_value_of_second_fixed_surface: nil

  @spec get(binary()) :: no_return
  def get(<<
        # Parameter category (see Code Table 4.1)
        parameter_category::integer(),
        # Parameter number (see Code  Table 4.2)
        parameter_number::integer(),
        # Type of generating process (see Code  Table 4.3)
        type_of_generating_process::integer(),
        # Background generating process identifier (defined by originating centre)
        background_generating_process_identifier::integer(),
        # Analysis or forecast generating process identifier (see Code ON388 Table A)
        analysis_or_forecast_generating_process_identifier::integer(),
        # Hours of observational data cutoff after reference time (see Note 1)
        hours_of_observational_data_cutoff_after_reference_time::integer-size(16),
        minutes_of_observational_data_cutoff_after_reference_time::integer(),
        # Indicator of unit of time range (see Code Table 4.4)
        indicator_of_unit_of_time_range::integer(),
        # Forecast time in units defined by octet 18
        forecast_time_in_units_defined_by_octet::integer-size(32),
        # Type of list fixed surface (see Code Table 4.5)
        type_of_list_fixed_surface::integer(),
        scale_factor_of_first_fixed_surface::integer(),
        scaled_value_of_first_fixed_surface::integer-size(32),
        # Type of second fixed surface (see Code Table 4.5)
        type_of_second_fixed_surface::integer(),
        scale_factor_of_second_fixed_surface::integer(),
        scaled_value_of_second_fixed_surface::integer-size(32),
        rest::binary()
      >>) do
    template = %__MODULE__{
      parameter_category: parameter_category,
      parameter_number: parameter_number,
      type_of_generating_process: type_of_generating_process,
      background_generating_process_identifier: background_generating_process_identifier,
      analysis_or_forecast_generating_process_identifier:
        analysis_or_forecast_generating_process_identifier,
      hours_of_observational_data_cutoff_after_reference_time:
        hours_of_observational_data_cutoff_after_reference_time,
      minutes_of_observational_data_cutoff_after_reference_time:
        minutes_of_observational_data_cutoff_after_reference_time,
      indicator_of_unit_of_time_range: indicator_of_unit_of_time_range,
      forecast_time_in_units_defined_by_octet: forecast_time_in_units_defined_by_octet,
      type_of_list_fixed_surface: type_of_list_fixed_surface,
      scale_factor_of_first_fixed_surface: scale_factor_of_first_fixed_surface,
      scaled_value_of_first_fixed_surface: scaled_value_of_first_fixed_surface,
      type_of_second_fixed_surface: type_of_second_fixed_surface,
      scale_factor_of_second_fixed_surface: scale_factor_of_second_fixed_surface,
      scaled_value_of_second_fixed_surface: scaled_value_of_second_fixed_surface
    }

    {:ok, template, rest}
  end
end
