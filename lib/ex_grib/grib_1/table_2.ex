defmodule ExGrib.Grib1.Table2 do
  @moduledoc """
  Indicator of parameter

  Notes:

  1 - SI units only are used for GRIB; the accuracy or precision with which the data are represented
      is a function of the range of the values, the decimal and/or binary scaling, and the number of
      bits used; GRIB enables suitable scaling factors to be selected to obviate the need to define
      parameters in non-SI units.

  2 - The code figures 0 to 127 are used to represent parameters which are exchanged between a
      number of centres; since the products generated by centres can be extremely diverse, code
      figures 128 to 254 are reserved for definition by the originating centre and may differ from
      centre to centre.

  3 - By convention, downward fluxes of radiation or other quantities shall be assigned negative
      values; upward fluxes of radiation or other quantities shall be assigned positive values.

  4 - Latitude and longitude are in millidegrees (thousandths of a degree).

  5 - Provision is made for three types of spectra:
    1 - direction and frequency
    2 - direction and radial number
    3 - radial number and radial number

  6 - The “parcel lifted index” (as defined in the International Meteorological Vocabulary
      (WMO–No. 182) under Latitude and longitude are in millidegrees (thousandths of a degree).
      temperature (T500) and that of a parcel of air lifted from the surface (Tparcel) following the
      dry and moist adiabatic process. Negative values of (T500 – Tparcel) suggest instability.
      The “best lifted index” is defined as the most unstable of a collection of parcel lifted
      indices, with parcel initial condition defined for a collection of 30 hPa thick layers stacked
      one upon the other with the lowest resting on the ground. Commonly four to six such layers are
      used in the calculation.

  https://apps.ecmwf.int/codes/grib/format/grib1/parameter/2/
  """

  @type id :: integer()

  @type parameter ::
          :absolute_divergence
          | :absolute_vorticity
          | :albedo
          | :best_lifted_index
          | :boundary_layer_dissipation
          | :brightness_temperature
          | :cloud_ice
          | :cloud_water
          | :convective_cloud_cover
          | :convective_precipitation
          | :convective_snow
          | :density
          | :deviation_of_sea_level_from_mean
          | :dew_point_depression
          | :dew_point_temperature
          | :direction_of_current
          | :direction_of_ice_drift
          | :direction_of_swell_waves
          | :direction_of_wind_waves
          | :evaporation
          | :geometrical_height
          | :geopotential
          | :geopotential_height
          | :geopotential_height_anomaly
          | :global_radiation_flux
          | :high_cloud_cover
          | :humidity_mixing_ratio
          | :icao_standard_atmosphere_reference_height
          | :ice_cover
          | :ice_divergence
          | :ice_growth_rate
          | :ice_thickness
          | :image_data
          | :land_cover
          | :lapse_rate
          | :large_scale_precipitation
          | :large_scale_snow
          | :latent_heat_flux
          | :longwave_radiation_flux
          | :low_cloud_cover
          | :main_thermocline_anomaly
          | :main_thermocline_depth
          | :maximum_temperature
          | :mean_period_of_swell_waves
          | :mean_period_of_wind_waves
          | :medium_cloud_cover
          | :minimum_temperature
          | :mixed_layer_depth
          | :momentum_flux_u_component
          | :momentum_flux_v_component
          | :montgomery_stream_function
          | :net_longwave_radiation_flux_surface
          | :net_longwave_radiation_flux_top_of_atmosphere
          | :net_shortwave_radiation_flux_surface
          | :net_shortwave_radiation_flux_top_of_atmosphere
          | :parcel_lifted_index
          | :potential_temperature
          | :potential_vorticity
          | :precipitable_water
          | :precipitation_rate
          | :pressure
          | :pressure_anomaly
          | :pressure_reduced_to_msl
          | :pressure_tendency
          | :primary_wave_direction
          | :primary_wave_mean_period
          | :pseudo_adiabatic_potential_temperature
          | :radar_spectra_1
          | :radar_spectra_2
          | :radar_spectra_3
          | :radiance_with_respect_to_wave_length
          | :radiance_with_respect_to_wave_number
          | :relative_divergence
          | :relative_humidity
          | :relative_vorticity
          | :salinity
          | :saturation_deficit
          | :secondary_wave_direction
          | :secondary_wave_mean_period
          | :sensible_heat_flux
          | :shortwave_radiation_flux
          | :sigma_coordinate_vertical_velocity
          | :significant_height_of_combined_wind_waves_and_swell
          | :significant_height_of_swell_waves
          | :significant_height_of_wind_waves
          | :snow_depth
          | :snow_melt
          | :snowfall_rate_water_equivalent
          | :soil_moisture_content
          | :soil_temperature
          | :specific_humidity
          | :speed_of_current
          | :speed_of_ice_drift
          | :standard_deviation_of_height
          | :stream_function
          | :surface_roughness
          | :temperature
          | :temperature_anomaly
          | :thunderstorm_probability
          | :total_cloud_cover
          | :total_ozone
          | :total_precipitation
          | :transient_thermocline_depth
          | :u_component_of_current
          | :u_component_of_ice_drift
          | :u_component_of_wind
          | :v_component_of_current
          | :v_component_of_ice_drift
          | :v_component_of_wind
          | :vapour_pressure
          | :vegetation
          | :velocity_potential
          | :vertical_u_component_shear
          | :vertical_v_component_shear
          | :vertical_velocity
          | :vertical_velocity
          | :virtual_temperature
          | :visibility
          | :water_equivalent_of_accumulated_snow_depth
          | :water_run_off
          | :water_temperature
          | :wave_spectra_1
          | :wave_spectra_2
          | :wave_spectra_3
          | :wind_direction
          | :wind_mixing_energy
          | :wind_speed

  @type unit ::
          :degree_true
          | :dobson
          | :gpm
          | :j
          | :k_m1
          | :k_m2_kg1_s1
          | :kg_kg1
          | :kg_m2_s1
          | :kg_m3
          | :m2_s1
          | :m2_s2
          | :m_s1
          | :n_m2
          | :none
          | :pa_s1
          | :percentage
          | :proportion
          | :s1
          | :w_m1_sr1
          | :w_m2
          | :w_m3_sr1

  @type t :: %__MODULE__{parameter: parameter(), unit: unit()} | :reserved | :missing

  defstruct parameter: :not_parsed, unit: :not_parsed

  @spec get(id()) :: t()
  def get(0), do: :reserved
  def get(1), do: %__MODULE__{parameter: :pressure, unit: :pa}
  def get(2), do: %__MODULE__{parameter: :pressure_reduced_to_msl, unit: :pa}
  def get(3), do: %__MODULE__{parameter: :pressure_tendency, unit: :pa_s1}
  def get(4), do: %__MODULE__{parameter: :potential_vorticity, unit: :k_m2_kg1_s1}
  def get(5), do: %__MODULE__{parameter: :icao_standard_atmosphere_reference_height, unit: :m}
  def get(6), do: %__MODULE__{parameter: :geopotential, unit: :m2_s2}
  def get(7), do: %__MODULE__{parameter: :geopotential_height, unit: :gpm}
  def get(8), do: %__MODULE__{parameter: :geometrical_height, unit: :m}
  def get(9), do: %__MODULE__{parameter: :standard_deviation_of_height, unit: :m}
  def get(10), do: %__MODULE__{parameter: :total_ozone, unit: :dobson}
  def get(11), do: %__MODULE__{parameter: :temperature, unit: :k}
  def get(12), do: %__MODULE__{parameter: :virtual_temperature, unit: :k}
  def get(13), do: %__MODULE__{parameter: :potential_temperature, unit: :k}
  def get(14), do: %__MODULE__{parameter: :pseudo_adiabatic_potential_temperature, unit: :k}
  def get(15), do: %__MODULE__{parameter: :maximum_temperature, unit: :k}
  def get(16), do: %__MODULE__{parameter: :minimum_temperature, unit: :k}
  def get(17), do: %__MODULE__{parameter: :dew_point_temperature, unit: :k}
  def get(18), do: %__MODULE__{parameter: :dew_point_depression, unit: :k}
  def get(19), do: %__MODULE__{parameter: :lapse_rate, unit: :k_m1}
  def get(20), do: %__MODULE__{parameter: :visibility, unit: :m}
  def get(21), do: %__MODULE__{parameter: :radar_spectra_1, unit: :none}
  def get(22), do: %__MODULE__{parameter: :radar_spectra_2, unit: :none}
  def get(23), do: %__MODULE__{parameter: :radar_spectra_3, unit: :none}
  def get(24), do: %__MODULE__{parameter: :parcel_lifted_index, unit: :k}
  def get(25), do: %__MODULE__{parameter: :temperature_anomaly, unit: :k}
  def get(26), do: %__MODULE__{parameter: :pressure_anomaly, unit: :pa}
  def get(27), do: %__MODULE__{parameter: :geopotential_height_anomaly, unit: :gpm}
  def get(28), do: %__MODULE__{parameter: :wave_spectra_1, unit: :none}
  def get(29), do: %__MODULE__{parameter: :wave_spectra_2, unit: :none}
  def get(30), do: %__MODULE__{parameter: :wave_spectra_3, unit: :none}
  def get(31), do: %__MODULE__{parameter: :wind_direction, unit: :degree_true}
  def get(32), do: %__MODULE__{parameter: :wind_speed, unit: :m_s1}
  def get(33), do: %__MODULE__{parameter: :u_component_of_wind, unit: :m_s1}
  def get(34), do: %__MODULE__{parameter: :v_component_of_wind, unit: :m_s1}
  def get(35), do: %__MODULE__{parameter: :stream_function, unit: :m2_s1}
  def get(36), do: %__MODULE__{parameter: :velocity_potential, unit: :m2_s1}
  def get(37), do: %__MODULE__{parameter: :montgomery_stream_function, unit: :m2_s2}
  def get(38), do: %__MODULE__{parameter: :sigma_coordinate_vertical_velocity, unit: :s1}
  def get(39), do: %__MODULE__{parameter: :vertical_velocity, unit: :pa_s1}
  def get(40), do: %__MODULE__{parameter: :vertical_velocity, unit: :m_s1}
  def get(41), do: %__MODULE__{parameter: :absolute_vorticity, unit: :s1}
  def get(42), do: %__MODULE__{parameter: :absolute_divergence, unit: :s1}
  def get(43), do: %__MODULE__{parameter: :relative_vorticity, unit: :s1}
  def get(44), do: %__MODULE__{parameter: :relative_divergence, unit: :s1}
  def get(45), do: %__MODULE__{parameter: :vertical_u_component_shear, unit: :s1}
  def get(46), do: %__MODULE__{parameter: :vertical_v_component_shear, unit: :s1}
  def get(47), do: %__MODULE__{parameter: :direction_of_current, unit: :degree_true}
  def get(48), do: %__MODULE__{parameter: :speed_of_current, unit: :m_s1}
  def get(49), do: %__MODULE__{parameter: :u_component_of_current, unit: :m_s1}
  def get(50), do: %__MODULE__{parameter: :v_component_of_current, unit: :m_s1}
  def get(51), do: %__MODULE__{parameter: :specific_humidity, unit: :kg_kg1}
  def get(52), do: %__MODULE__{parameter: :relative_humidity, unit: :percentage}
  def get(53), do: %__MODULE__{parameter: :humidity_mixing_ratio, unit: :kg_kg1}
  def get(54), do: %__MODULE__{parameter: :precipitable_water, unit: :kg_m2}
  def get(55), do: %__MODULE__{parameter: :vapour_pressure, unit: :pa}
  def get(56), do: %__MODULE__{parameter: :saturation_deficit, unit: :pa}
  def get(57), do: %__MODULE__{parameter: :evaporation, unit: :kg_m2}
  def get(58), do: %__MODULE__{parameter: :cloud_ice, unit: :kg_m2}
  def get(59), do: %__MODULE__{parameter: :precipitation_rate, unit: :kg_m2_s1}
  def get(60), do: %__MODULE__{parameter: :thunderstorm_probability, unit: :percentage}
  def get(61), do: %__MODULE__{parameter: :total_precipitation, unit: :kg_m2}
  def get(62), do: %__MODULE__{parameter: :large_scale_precipitation, unit: :kg_m2}
  def get(63), do: %__MODULE__{parameter: :convective_precipitation, unit: :kg_m2}
  def get(64), do: %__MODULE__{parameter: :snowfall_rate_water_equivalent, unit: :kg_m2_s1}

  def get(65),
    do: %__MODULE__{parameter: :water_equivalent_of_accumulated_snow_depth, unit: :kg_m2}

  def get(66), do: %__MODULE__{parameter: :snow_depth, unit: :m}
  def get(67), do: %__MODULE__{parameter: :mixed_layer_depth, unit: :m}
  def get(68), do: %__MODULE__{parameter: :transient_thermocline_depth, unit: :m}
  def get(69), do: %__MODULE__{parameter: :main_thermocline_depth, unit: :m}
  def get(70), do: %__MODULE__{parameter: :main_thermocline_anomaly, unit: :m}
  def get(71), do: %__MODULE__{parameter: :total_cloud_cover, unit: :percentage}
  def get(72), do: %__MODULE__{parameter: :convective_cloud_cover, unit: :percentage}
  def get(73), do: %__MODULE__{parameter: :low_cloud_cover, unit: :percentage}
  def get(74), do: %__MODULE__{parameter: :medium_cloud_cover, unit: :percentage}
  def get(75), do: %__MODULE__{parameter: :high_cloud_cover, unit: :percentage}
  def get(76), do: %__MODULE__{parameter: :cloud_water, unit: :kg_m2}
  def get(77), do: %__MODULE__{parameter: :best_lifted_index, unit: :k}
  def get(78), do: %__MODULE__{parameter: :convective_snow, unit: :kg_m2}
  def get(79), do: %__MODULE__{parameter: :large_scale_snow, unit: :kg_m2}
  def get(80), do: %__MODULE__{parameter: :water_temperature, unit: :k}
  def get(81), do: %__MODULE__{parameter: :land_cover, unit: :proportion}
  def get(82), do: %__MODULE__{parameter: :deviation_of_sea_level_from_mean, unit: :m}
  def get(83), do: %__MODULE__{parameter: :surface_roughness, unit: :m}
  def get(84), do: %__MODULE__{parameter: :albedo, unit: :percentage}
  def get(85), do: %__MODULE__{parameter: :soil_temperature, unit: :k}
  def get(86), do: %__MODULE__{parameter: :soil_moisture_content, unit: :kg_m2}
  def get(87), do: %__MODULE__{parameter: :vegetation, unit: :percentage}
  def get(88), do: %__MODULE__{parameter: :salinity, unit: :kg_kg1}
  def get(89), do: %__MODULE__{parameter: :density, unit: :kg_m3}
  def get(90), do: %__MODULE__{parameter: :water_run_off, unit: :kg_m2}
  def get(91), do: %__MODULE__{parameter: :ice_cover, unit: :proportion}
  def get(92), do: %__MODULE__{parameter: :ice_thickness, unit: :m}
  def get(93), do: %__MODULE__{parameter: :direction_of_ice_drift, unit: :degree_true}
  def get(94), do: %__MODULE__{parameter: :speed_of_ice_drift, unit: :m_s1}
  def get(95), do: %__MODULE__{parameter: :u_component_of_ice_drift, unit: :m_s1}
  def get(96), do: %__MODULE__{parameter: :v_component_of_ice_drift, unit: :m_s1}
  def get(97), do: %__MODULE__{parameter: :ice_growth_rate, unit: :m_s1}
  def get(98), do: %__MODULE__{parameter: :ice_divergence, unit: :s1}
  def get(99), do: %__MODULE__{parameter: :snow_melt, unit: :kg_m2}

  def get(100),
    do: %__MODULE__{parameter: :significant_height_of_combined_wind_waves_and_swell, unit: :m}

  def get(101), do: %__MODULE__{parameter: :direction_of_wind_waves, unit: :degree_true}
  def get(102), do: %__MODULE__{parameter: :significant_height_of_wind_waves, unit: :m}
  def get(103), do: %__MODULE__{parameter: :mean_period_of_wind_waves, unit: :s}
  def get(104), do: %__MODULE__{parameter: :direction_of_swell_waves, unit: :degree_true}
  def get(105), do: %__MODULE__{parameter: :significant_height_of_swell_waves, unit: :m}
  def get(106), do: %__MODULE__{parameter: :mean_period_of_swell_waves, unit: :s}
  def get(107), do: %__MODULE__{parameter: :primary_wave_direction, unit: :degree_true}
  def get(108), do: %__MODULE__{parameter: :primary_wave_mean_period, unit: :s}
  def get(109), do: %__MODULE__{parameter: :secondary_wave_direction, unit: :degree_true}
  def get(110), do: %__MODULE__{parameter: :secondary_wave_mean_period, unit: :s}
  def get(111), do: %__MODULE__{parameter: :net_shortwave_radiation_flux_surface, unit: :w_m2}
  def get(112), do: %__MODULE__{parameter: :net_longwave_radiation_flux_surface, unit: :w_m2}

  def get(113),
    do: %__MODULE__{parameter: :net_shortwave_radiation_flux_top_of_atmosphere, unit: :w_m2}

  def get(114),
    do: %__MODULE__{parameter: :net_longwave_radiation_flux_top_of_atmosphere, unit: :w_m2}

  def get(115), do: %__MODULE__{parameter: :longwave_radiation_flux, unit: :w_m2}
  def get(116), do: %__MODULE__{parameter: :shortwave_radiation_flux, unit: :w_m2}
  def get(117), do: %__MODULE__{parameter: :global_radiation_flux, unit: :w_m2}
  def get(118), do: %__MODULE__{parameter: :brightness_temperature, unit: :k}
  def get(119), do: %__MODULE__{parameter: :radiance_with_respect_to_wave_number, unit: :w_m1_sr1}
  def get(120), do: %__MODULE__{parameter: :radiance_with_respect_to_wave_length, unit: :w_m3_sr1}
  def get(121), do: %__MODULE__{parameter: :latent_heat_flux, unit: :w_m2}
  def get(122), do: %__MODULE__{parameter: :sensible_heat_flux, unit: :w_m2}
  def get(123), do: %__MODULE__{parameter: :boundary_layer_dissipation, unit: :w_m2}
  def get(124), do: %__MODULE__{parameter: :momentum_flux_u_component, unit: :n_m2}
  def get(125), do: %__MODULE__{parameter: :momentum_flux_v_component, unit: :n_m2}
  def get(126), do: %__MODULE__{parameter: :wind_mixing_energy, unit: :j}
  def get(127), do: %__MODULE__{parameter: :image_data, unit: :none}
  def get(128), do: :reserved
  def get(255), do: :missing
end
